[{"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\index.js":"1","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\reportWebVitals.js":"2","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\App.js":"3","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\ContentCard.js":"4"},{"size":494,"mtime":1607004910177,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1607004910180,"results":"7","hashOfConfig":"6"},{"size":4364,"mtime":1607164810388,"results":"8","hashOfConfig":"6"},{"size":2547,"mtime":1607162003876,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1tlyr0v",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\index.js",[],["22","23"],"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\reportWebVitals.js",[],"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\App.js",["24","25","26","27","28","29","30"],"import React from 'react'\r\nimport{makeStyles} from '@material-ui/core/styles'\r\nimport axios, {post} from 'axios';\r\nimport ContentCard from './Component/ContentCard';\r\nimport {\r\n  colors, \r\n  Divider, \r\n  Button,\r\n  TextField\r\n} from \"@material-ui/core\"\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst SERVER = '/test';\r\n//const SERVER = 'http://192.168.0.5:9090/test';\r\naxios.defaults.baseURL = SERVER;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.get['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  divider: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    backgroundColor: \"black\",\r\n    width: \"100%\",\r\n    height: 2,\r\n  },\r\n  modal: {\r\n    top: '50%',\r\n    left: '50%'\r\n  },\r\n  paper: {\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  Button: {\r\n    marginTop: 25,\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedFile, setSelectedFile] = React.useState(null)\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [tags, setTags] = React.useState(\"\");\r\n\r\n  const [contentData, setContentData] = React.useState([]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setTags(\"\");\r\n  }\r\n\r\n  const createHandler = async () => {\r\n    // TODO : post to server\r\n    const data = {\r\n      fnc: \"uploadContent\",\r\n      name: name,\r\n      description: description,\r\n      tags: tags\r\n    }\r\n\r\n    console.log(\"post\")\r\n\r\n    await axios.post(SERVER, data)\r\n    .then( async res => {\r\n      console.log(res);\r\n      // 전체목록 초기화\r\n      const data = {\r\n        fnc: \"showAllContent\",\r\n      };\r\n      //await axios.post(SERVER, data).then(res => {\r\n      //  console.log(res);\r\n      //  setContentData(res.data);\r\n      //})\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n\r\n    // modal 초기화\r\n    //setName(\"\");\r\n    //setDescription(\"\");\r\n    //setTags(\"\");\r\n    // modal close\r\n  }\r\n\r\n  const createInputNameHandler = event => {\r\n    setName(event.target.value);\r\n  }\r\n  const createInputDescriptionHandler = event => {\r\n    setDescription(event.target.value);\r\n  }\r\n  const createInputTagsHandler = event => {\r\n    setTags(event.target.value);\r\n  }\r\n\r\n  const createModal = (\r\n    <div className={classes.paper}>\r\n    <TextField \r\n      fullWidth\r\n      label=\"Name\" \r\n      onChange={createInputNameHandler}\r\n    />\r\n    <TextField \r\n      fullWidth\r\n      label=\"Description\" \r\n      onChange={createInputDescriptionHandler}\r\n    />\r\n    <TextField \r\n      fullWidth\r\n      label=\"Tags\" \r\n      onChange={createInputTagsHandler}\r\n    />\r\n    <Button\r\n      className={classes.Button}\r\n      margin = 'normal'\r\n      variant=\"contained\" \r\n      color=\"primary\" \r\n      onClick={createHandler}\r\n    >\r\n      파일 생성\r\n    </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      {/* <input type='img' onChange={e => handleFileInput(e)}/> */}\r\n      <Button \r\n      variant=\"contained\" \r\n      color=\"primary\" \r\n      onClick={handleOpen}>\r\n        파일 생성\r\n      </Button>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n       {createModal}\r\n      </Modal>\r\n    </div>\r\n\r\n    <Divider \r\n    className={classes.divider}\r\n    lignt={true}\r\n    />\r\n\r\n    {(contentData.length) &&\r\n    <div>\r\n      {contentData.map((content, i) => {\r\n        return(\r\n          <ContentCard fileData = {content}/>\r\n        )\r\n      })}\r\n       {/* <ContentCard fileData = {fileStorage[0]}/> */}\r\n    </div>\r\n    }\r\n    \r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\ContentCard.js",["31","32"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  CardContent, \r\n  Card, \r\n  CardMedia, \r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport imgP from '../images/Photo.png';\r\n\r\nconst options = [\r\n  '파일 열기',\r\n  '파일 삭제',\r\n  '이름 바꾸기',\r\n  '정보 보기',\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    width: 260,\r\n    height: 56,\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    border: \"3px solid black\"\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    textAlign: \"center\",\r\n  },\r\n  cover: {\r\n  },\r\n  image: {\r\n    height: 50,\r\n    width: 50,\r\n    borderRight: \"3px solid black\"\r\n  },\r\n  menuBtn:{\r\n\r\n  }\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function ContentCard ({fileData}){\r\n  \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  console.log(\"fileData\", fileData)\r\n\r\n  const[isOpen, setIsOpen] = React.useState(null);\r\n  const open = Boolean(isOpen);\r\n\r\n  const handleClick = (event) => {\r\n    console.log(123);\r\n    setIsOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(null);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        // image={imgP}\r\n        title=\"Live from space album cover\"\r\n        \r\n      >\r\n      {/* <img src={imgA}/> */}\r\n        <img className={classes.image}src={imgP} alt=\"P\"/>\r\n      </CardMedia>\r\n        <CardContent \r\n        className={classes.content}>\r\n          <Typography\r\n          >\r\n            {fileData.name}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <IconButton\r\n          className={classes.menuBtn}\r\n          aria-label=\"more\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n        >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={isOpen}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n      </div>\r\n    </Card>\r\n  )\r\n}",["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":16,"nodeType":"41","messageId":"42","endLine":3,"endColumn":20},{"ruleId":"39","severity":1,"message":"43","line":6,"column":3,"nodeType":"41","messageId":"42","endLine":6,"endColumn":9},{"ruleId":"39","severity":1,"message":"44","line":12,"column":10,"nodeType":"41","messageId":"42","endLine":12,"endColumn":14},{"ruleId":"39","severity":1,"message":"45","line":56,"column":10,"nodeType":"41","messageId":"42","endLine":56,"endColumn":22},{"ruleId":"39","severity":1,"message":"46","line":56,"column":24,"nodeType":"41","messageId":"42","endLine":56,"endColumn":39},{"ruleId":"39","severity":1,"message":"47","line":63,"column":23,"nodeType":"41","messageId":"42","endLine":63,"endColumn":37},{"ruleId":"39","severity":1,"message":"48","line":91,"column":13,"nodeType":"41","messageId":"42","endLine":91,"endColumn":17},{"ruleId":"39","severity":1,"message":"49","line":1,"column":16,"nodeType":"41","messageId":"42","endLine":1,"endColumn":24},{"ruleId":"39","severity":1,"message":"50","line":53,"column":9,"nodeType":"41","messageId":"42","endLine":53,"endColumn":14},{"ruleId":"35","replacedBy":"51"},{"ruleId":"37","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'post' is defined but never used.","Identifier","unusedVar","'colors' is defined but never used.","'blue' is defined but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'setContentData' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.",["53"],["54"],"no-global-assign","no-unsafe-negation"]