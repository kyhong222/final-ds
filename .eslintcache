[{"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\index.js":"1","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\reportWebVitals.js":"2","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\App.js":"3","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\ContentCard.js":"4","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\FolderCard.js":"5"},{"size":494,"mtime":1607004910177,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1607004910180,"results":"8","hashOfConfig":"7"},{"size":7829,"mtime":1607194388476,"results":"9","hashOfConfig":"7"},{"size":6823,"mtime":1607190717887,"results":"10","hashOfConfig":"7"},{"size":5025,"mtime":1607193899969,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tlyr0v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\index.js",[],["25","26"],"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\reportWebVitals.js",[],"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\App.js",[],"C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\ContentCard.js",["27","28"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  CardContent, \r\n  Card, \r\n  CardMedia, \r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nimport imgP from '../images/Photo.png';\r\nimport axios from 'axios';\r\n\r\nconst SERVER = '/';\r\n//const SERVER = 'http://192.168.0.5:9090/test';\r\naxios.defaults.baseURL = SERVER;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.get['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: 260,\r\n    height: 56,\r\n    border: \"3px solid black\",\r\n    margin: '5px 5px'\r\n\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    textAlign: \"center\",\r\n    width: 120,\r\n    borderLeft: \"3px solid black\",\r\n  },\r\n  cover: {\r\n  },\r\n  image: {\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  menuBtn:{\r\n\r\n  },\r\n  paper: {\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modal: {\r\n    top: '50%',\r\n    left: '50%'\r\n  },\r\n  Button: {\r\n    marginTop: 25,\r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function ContentCard ({fileData}){\r\n  \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const[isOpen, setIsOpen] = React.useState(null);\r\n  const[isModalOpen, setIsModalOpen] = React.useState(false);\r\n\r\n  const open = Boolean(isOpen);\r\n\r\n  const handleClick = (event) => {\r\n    setIsOpen(event.currentTarget);\r\n  };\r\n\r\n  const [name, setName] = React.useState(fileData.name);\r\n  const [description, setDescription] = React.useState(fileData.description);\r\n  const [tags, setTags] = React.useState(fileData.tags);\r\n\r\n  const [currentModal, setCurrentModal] = React.useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(null);\r\n  }\r\n  const updateInputDescriptionHandler = event => {\r\n    console.log(event.target.value)\r\n    setDescription(event.target.value);\r\n  }\r\n  const updateInputTagsHandler = event => {\r\n    setTags(event.target.value);\r\n  }\r\n\r\n  const handleShow = async() => {\r\n    const data = {\r\n      fnc: \"showContentDetail\",\r\n      name: `${fileData.name}`,\r\n    }\r\n    await axios.post(SERVER, data)\r\n    .then(res => {\r\n      console.log(res);\r\n      // MODAL 띄우기\r\n      setCurrentModal(\"show\");\r\n      setIsModalOpen(true);\r\n      setName(res.data.name);\r\n      setDescription(res.data.description);\r\n      setTags(res.data.tags);\r\n      setIsOpen(null);\r\n    })\r\n  }\r\n  const handleUpdate = () => {\r\n    setCurrentModal(\"update\");\r\n    setIsOpen(null);\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  const handleUpdateModal = async () => {\r\n    const data = {\r\n      fnc: \"updateContent\",\r\n      name: `${fileData.name}`,\r\n      description: description,\r\n      tags: tags\r\n    }\r\n    await axios.post(SERVER, data)\r\n    .then(res => {\r\n      console.log(res);\r\n      setIsModalOpen(false);\r\n    })\r\n  }\r\n  const handleDelete = async () => {\r\n    const data = {\r\n      fnc: \"deleteContent\",\r\n      name: `${fileData.name}`,\r\n    }\r\n    await axios.post(SERVER, data)\r\n    .then(res => {\r\n      console.log(res);\r\n      setIsOpen(null);\r\n    })\r\n  }\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n const showModal = \r\n (\r\n  <div className={classes.paper}>\r\n  <h2>파일 정보</h2>\r\n  <TextField \r\n    className={classes.textField}\r\n    fullWidth\r\n    label=\"name\"\r\n    value={fileData.name}\r\n    InputProps={{readOnly:true}}\r\n  />\r\n  <TextField\r\n    className={classes.textField} \r\n    InputProps={{readOnly:true}}\r\n    fullWidth\r\n    value={fileData.description === \"\"? \" \" : fileData.description}\r\n    label=\"description\"\r\n  />\r\n  <TextField \r\n    className={classes.textField} \r\n    InputProps={{readOnly:true}}\r\n    fullWidth\r\n    label=\"tags\"\r\n    value={fileData.tags}\r\n  />\r\n   <TextField \r\n    className={classes.textField} \r\n    InputProps={{readOnly:true}}\r\n    fullWidth\r\n    label=\"uploaded time\"\r\n    value={fileData.uploaded}\r\n  />\r\n   <TextField \r\n    className={classes.textField} \r\n    InputProps={{readOnly:true}}\r\n    fullWidth\r\n    label=\"last used time\"\r\n    value={fileData.used}\r\n  />\r\n</div>\r\n  );\r\n\r\n const updateModal = (\r\n  <div className={classes.paper}>\r\n  <h2>{fileData.name} 수정</h2>\r\n  <TextField \r\n    fullWidth\r\n    placeholder={fileData.description === \"\"? \" \" : fileData.description}\r\n    label=\"description\"\r\n    onChange={updateInputDescriptionHandler}\r\n  />\r\n  <TextField \r\n    fullWidth\r\n    label=\"tags\"\r\n    placeholder={fileData.tags}\r\n    onChange={updateInputTagsHandler}\r\n  />\r\n  <Button\r\n  className={classes.Button}\r\n  margin = 'normal'\r\n  variant=\"contained\" \r\n  color=\"primary\" \r\n  onClick={handleUpdateModal}\r\n>\r\n  Update\r\n</Button>\r\n</div>\r\n );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardMedia\r\n          className={classes.cover}\r\n        >\r\n        <img className={classes.image}src={imgP} alt=\"P\"/>\r\n        </CardMedia>\r\n        <CardContent className={classes.content}>\r\n          <Typography>\r\n            {fileData.name}\r\n          </Typography>\r\n        </CardContent>\r\n        <IconButton\r\n          className={classes.menuBtn}\r\n          aria-label=\"more\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n        >\r\n          <MoreVertIcon/>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"long-menu\"\r\n          anchorEl={isOpen}\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          PaperProps={{\r\n            style: {\r\n              maxHeight: ITEM_HEIGHT * 4.5,\r\n              width: '20ch',\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem onClick={handleShow} >정보 보기</MenuItem>\r\n          <MenuItem onClick={handleUpdate}>정보 수정</MenuItem>\r\n          <MenuItem onClick={handleDelete}>파일 삭제</MenuItem>\r\n        </Menu>\r\n        <Modal\r\n          className={classes.modal}\r\n          open={isModalOpen}\r\n          onClose={handleModalClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {currentModal===\"show\" ? showModal : updateModal}\r\n        </Modal>\r\n      </div>\r\n    </Card>\r\n  )\r\n}","C:\\Users\\DayDream\\Desktop\\final-ds\\src\\Component\\FolderCard.js",["29"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  CardContent, \r\n  Card, \r\n  CardMedia, \r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nimport ContentCard from './ContentCard'\r\n\r\nimport imgF from '../images/Folder.png';\r\nimport axios from 'axios';\r\n\r\nconst SERVER = '/';\r\n//const SERVER = 'http://192.168.0.5:9090/test';\r\naxios.defaults.baseURL = SERVER;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.get['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: 260,\r\n    height: 56,\r\n    border: \"3px solid black\",\r\n    margin: '5px 5px'\r\n\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    textAlign: \"center\",\r\n    width: 120,\r\n    borderLeft: \"3px solid black\",\r\n  },\r\n  cover: {\r\n  },\r\n  image: {\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  menuBtn:{\r\n\r\n  },\r\n  paper: {\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modal: {\r\n    top: '50%',\r\n    left: '50%'\r\n  },\r\n  Button: {\r\n    marginTop: 25,\r\n  },\r\n  Menu: {\r\n    \r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function FolderCard ({folderData}){\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const[isOpen, setIsOpen] = React.useState(null);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [modalType, setModalType] = React.useState(\"\");\r\n  const [fileData, setFileData] = React.useState([]);\r\n  \r\n  const open = Boolean(isOpen);\r\n\r\n  const folderMenu = (event) => {\r\n    setIsOpen(event.currentTarget);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  const openFolder = async () => {\r\n    setIsOpen(false);\r\n    const data = {\r\n      fnc: \"showFolder\",\r\n      name: folderData.name\r\n    }\r\n    await axios.post(SERVER, data).then( res => {\r\n      setFileData(res.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n\r\n    setModalType(\"open\");\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  const showFolder = () => {\r\n    setIsOpen(false);\r\n    setModalType(\"show\");\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  const openFolderModal =  (\r\n    <div className={classes.paper}>\r\n    <h2>{folderData.name}</h2>\r\n    <div>\r\n    {fileData.map((file) => {\r\n      return(\r\n        <ContentCard fileData={file} />\r\n      )\r\n    })}\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n  const showFolderModal = (\r\n    <div className={classes.paper}>\r\n    <h2>{folderData.name} 정보</h2>\r\n    <TextField \r\n      className={classes.textField}\r\n      fullWidth\r\n      label=\"name\"\r\n      value={folderData.name}\r\n      InputProps={{readOnly:true}}\r\n    />\r\n     <TextField \r\n      className={classes.textField}\r\n      InputProps={{readOnly:true}}\r\n      fullWidth\r\n      label=\"count\"\r\n      value={folderData.count}\r\n    />\r\n  </div>\r\n  );\r\n\r\n  return(\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardMedia\r\n          className={classes.cover} \r\n        >\r\n          <img className={classes.image}src={imgF} alt=\"F\"/>\r\n        </CardMedia>\r\n        <CardContent className={classes.content}>\r\n          <Typography>\r\n            {folderData.name}\r\n          </Typography>\r\n        </CardContent>\r\n        <IconButton\r\n          className={classes.menuBtn}\r\n          aria-label=\"more\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={folderMenu}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Menu\r\n          className={classes.Menu}\r\n          id=\"long-menu\"\r\n          anchorEl={isOpen}\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          PaperProps={{\r\n            style: {\r\n              maxHeight: ITEM_HEIGHT * 4.5,\r\n              width: '20ch',\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem onClick={openFolder}>열기</MenuItem>\r\n          <MenuItem onClick={showFolder}>정보 보기</MenuItem>\r\n        </Menu>\r\n        <Modal\r\n          className={classes.modal}\r\n          open={isModalOpen}\r\n          onClose={handleModalClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {(modalType === \"show\") ? showFolderModal : openFolderModal}\r\n        </Modal>\r\n      </div>\r\n    </Card>\r\n  )}",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":83,"column":9,"nodeType":"36","messageId":"37","endLine":83,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":94,"column":10,"nodeType":"36","messageId":"37","endLine":94,"endColumn":14},{"ruleId":"34","severity":1,"message":"35","line":86,"column":9,"nodeType":"36","messageId":"37","endLine":86,"endColumn":14},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]